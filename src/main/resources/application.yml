server:
  port: 8080
  servlet:
    context-path: /api

spring:
  application:
    name: bigtable-poc
  
  # H2 Database Configuration
  datasource:
    url: jdbc:h2:mem:bigtable;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE;CACHE_SIZE=262144;LOCK_TIMEOUT=10000
    driverClassName: org.h2.Driver
    username: sa
    password:
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000 
  
  h2:
    console:
      enabled: true
      path: /h2-console
  
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: create-drop
    show-sql: false
    properties:
      hibernate:
        format_sql: false
        use_sql_comments: false
        jdbc:
          batch_size: 1000
          order_inserts: true
          order_updates: true
        connection:
          provider_disables_autocommit: true

# Custom application properties
bigtable:
  implementation: arrow  # Options: h2, arrow
  session:
    timeout-minutes: 30
  performance:
    metrics-enabled: true

# OpenTelemetry Auto-Instrumentation
otel:
  traces:
    exporter: otlp
  metrics:
    exporter: none  
  logs:
    exporter: none
  exporter:
    otlp:
      endpoint: http://localhost:4317
  service:
    name: bigtable-poc
  resource:
    attributes:
      service.name: bigtable-poc
      service.version: 1.0.0
  instrumentation:
    spring-webmvc:
      enabled: true
    jdbc:
      enabled: true

# Logging configuration
logging:
  level:
    com.poc.bigtable: DEBUG
    org.springframework.web: INFO
    org.hibernate.SQL: WARN
    org.hibernate.type.descriptor.sql.BasicBinder: WARN

# Management endpoints
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: always